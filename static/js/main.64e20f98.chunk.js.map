{"version":3,"sources":["styles/Sidebar.js","components/Sidebar/ToReadRow.js","components/Sidebar/ToRead.js","components/Sidebar/CurrentlyReadingRow.js","components/Sidebar/CurrentlyReading.js","components/Sidebar/DoneReading.js","containers/Sidebar.js","containers/Calendar.js","components/useStorage.js","styles/colours.js","styles/typography.js","components/wip.js","App.js","reportWebVitals.js","index.js"],"names":["AddButton","styled","button","StyledUl","ul","RemoveButton","MoveButton","sidebarBlock","height","overflow","paddingRight","innerBlock","width","minHeight","content","ReadRow","item","onMigrate","onRemove","onUpdate","onClick","id","contentEditable","name","range","document","createRange","selectNodeContents","getElementById","sel","window","getSelection","removeAllRanges","addRange","onBlur","field","textContent","onKeyPress","e","charCode","preventDefault","activeElement","blur","style","outline","spellcheck","phrase","num","Math","floor","random","textGenerator","ToRead","list","setList","current","setCurrent","updateList","newName","newItem","newList","map","element","AddBookButton","length","blankItem","uuidv4","start","end","concat","handleRemove","filter","moveToCurrent","today","Date","numberOfDaysSinceEpoch","maxHeight","StyledButton","StyledRemove","CurrentlyReadingRow","handleFinished","handleToRead","textAlign","CurrentlyReading","finished","setFinished","toRead","setToRead","removeItem","moveToFinished","newFinishedList","moveToRead","newToReadList","right","StyledBlock","h2","DoneReading","arr","index","color","replaceAll","Sidebar","Calendar","data","done","el","useStorage","key","useState","initialSet","setData","useEffect","localData","JSON","parse","localStorage","getItem","setItem","stringify","setStorage","colours","background","darkblue","lightblue","red","pink","peach","green","bodyText","smallText","Heading","p","Body","span","BodyBold","typography","ButtonText","Titles","Wip","appcss","sidebarcss","position","App","setDone","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.64e20f98.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const AddButton = styled.button`\n    width: 120px;\n    height: 45px;\n    color: black;\n    font-size: 15px;\n    font-weight: bold;\n    border-width: 3px;\n    border-color: black;\n    background-color: white;\n    display: table-cell;\n    vertical-align: middle;\n    transition: all 0.2s linear;\n    position:fixed;\n    right:3rem;\n    top:2rem;\n\n    &:hover {\n        color: white;\n        background-color: black;\n    }\n`\n\nexport const StyledUl = styled.ul`\n    list-style-type: none; \n    padding:0px; \n    margin-left: 1em;\n`\n\nexport const RemoveButton = styled.button`\n    position: relative;\n    border: none;\n    padding: 0px 15px 0px 0px;\n    background: none;\n    width: 30px;\n    cursor: pointer;\n    margin: 4px;\n    font-size: 21px;\n    background-clip:content-box;\n\n\n    &::before {\n        content: \"•\";\n    }\n\n    &:hover {\n        &::before {\n            content: \"✕\";\n        }\n    }\n`\n\nexport const MoveButton = styled.button`\n    color: white;\n    border: none;\n    background-color: black;\n    vertical-align: middle;\n    transition: all 0.5s linear;\n    opacity: 0;\n\n    &:hover {\n        opacity: 1;\n    }\n`\n\n// Positioning\n\n// Sidebar block\nexport const sidebarBlock = {\n    height: '100vh',\n    overflow: \"scroll\",\n    paddingRight: \"2rem\",\n    // backgroundColor: \"green\",\n}\n\n// ToRead block ----->\nexport const innerBlock  = {\n    width: \"24rem\",\n    minHeight: \"30vh\",\n    // backgroundColor:\"blue\",\n}\n\nexport const content = {\n    // backgroundColor: 'purple',\n}\n\nexport const toReadH1 = {\n    display: 'inline', \n    verticalAlign:'middle'\n}\n\n// <-----","import { RemoveButton, MoveButton } from \"../../styles/Sidebar\";\n\nconst ReadRow = ({ item, onMigrate, onRemove, onUpdate }) => {\n\n    function textGenerator() {\n        let num = Math.floor(Math.random() * 11);\n        let phrase;\n        if (num < 6) \n            phrase = 'start reading?';\n        else if (num >= 6 && num < 8) \n            phrase = 'u know u wanna :^)';\n        else if (num >= 8)\n            phrase = 'read me!'\n        return phrase;\n    }\n\n    function handleFocus() {\n        if (item.name === \"Edit Me!\") {\n            let range = document.createRange();\n            range.selectNodeContents(document.getElementById(item.id));\n            let sel = window.getSelection();\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n    }\n\n    function handleBlur() {\n        let field = document.getElementById(item.id).textContent;\n        if (field === 'Edit Me!' || field === '') onRemove(item.id);\n        else onUpdate(item, field);\n    }\n\n    function keyPress(e) {\n        if(e.charCode === 13) {\n            let field = document.getElementById(item.id).textContent;\n            onUpdate(item, field);\n            e.preventDefault();\n            document.activeElement.blur();\n        }\n    }\n\n    function handleRemove() {\n        onRemove(item.id);\n    }\n\n    function handleMigrate() {\n        onMigrate(item);\n        onRemove(item.id);\n    }\n\n    return (\n        <div>\n            <RemoveButton onClick={handleRemove}/>\n            <span id={item.id}\n                    contentEditable\n                    onClick={handleFocus}\n                    onBlur={handleBlur}\n                    onKeyPress={keyPress}\n                    style={{outline: 'none',spellcheck:\"false\"}}\n                >{item.name}</span>\n                \n                <MoveButton onClick={handleMigrate} >{textGenerator()}</MoveButton>\n        </div>\n    )\n}\n\nexport default ReadRow;","import React from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport Row from './ToReadRow'\nimport { AddButton, StyledUl, innerBlock, content} from '../../styles/Sidebar'\n\nconst ToRead = ({ list, setList, current, setCurrent }) => {\n\n    function updateList(item, newName) {\n        const newItem = { ...item, name:newName };\n        const newList = list.map((element) => (\n            element.id === item.id ? newItem : element\n        ));\n        setList(newList);\n    }\n\n    const AddBookButton = () => {\n        \n        function handleAdd() {\n            //check if no-book exists\n            if (list.length === 0);\n            else if (list[list.length-1].name === 'Edit Me!') return;\n\n            //add new-book\n            const blankItem = {\n                name: 'Edit Me!',\n                id: uuidv4(),\n                start: null,\n                end: null\n            }\n            const newList = list.concat(blankItem)\n            setList(newList)\n            \n        }\n\n        return (\n            <AddButton onClick={handleAdd}>\n                Add Book\n            </AddButton>\n        )\n    }\n\n    function handleRemove(id) {\n        const newList = list.filter((element) => (\n            element.id === id ? false : true\n        ))\n        setList(newList)\n    }\n\n    // helper for moving toread book to currentlyreading; starts the date as time clicked\n    function moveToCurrent(item) {\n        let today = new Date();\n        let numberOfDaysSinceEpoch = Math.floor(today/8.64e7)\n        const newList = current.concat({\n            ...item,\n            start: numberOfDaysSinceEpoch\n        })\n        setCurrent(newList)\n    }\n\n\n    return (\n        <div>\n        <div style={innerBlock}>\n            <h1>To-Read:</h1>      \n            <AddBookButton/>\n            <div style={{...content, overflow: \"scroll\", maxHeight: \"26vh\"}}>\n                <StyledUl>\n                    {list.map((item) => (\n                        <li key={item.id}>\n                            <Row \n                                item={item} \n                                onMigrate={moveToCurrent}\n                                onRemove={handleRemove}\n                                onUpdate={updateList}\n                            />\n                        </li>\n                    ))}\n                </StyledUl>\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default ToRead;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n    font-size: 1rem;\n    border-width: 2px;\n    border-color: black;\n    border-style:solid;\n    background-color: white;\n    padding: 0.25rem 0.4rem;\n    transition: all 0.5s ease;\n    margin: 0.5rem 0;\n    max-width: 23rem;\n    word-wrap: break-word;\n    &:hover {\n        box-shadow: 5px 5px;\n    }\n`\n\nconst StyledRemove = styled.button`\n    font-size: 1rem;\n    color: red;\n    border-color: red;\n    background-color: transparent;\n    // border-width: 0.125rem 0 0.125rem 0.125rem;\n    padding: 0.25rem 0.4rem;\n    transition: all 0.5s ease;\n    margin-right: -0.125rem;\n    opacity: 0.05;\n    &:hover {\n        color: white;\n        border-color: red;\n        background-color: red;\n        border-style: solid;\n        opacity: 1;\n    }\n`\n\n\nconst CurrentlyReadingRow = ({ id, item, handleFinished, handleToRead }) => {\n\n    function handleMoveToFinished() {\n        handleFinished(item);\n    };\n\n    function handleMoveToRead() {\n        handleToRead(item);\n    }\n\n    return (\n        <div style={{textAlign:'right', paddingRight:'1rem'}}>\n            <StyledRemove onClick={handleMoveToRead}>✕</StyledRemove>\n            <StyledButton id={id} onClick={handleMoveToFinished} >{item.name}</StyledButton>\n        </div>\n    );\n}\n\nexport default CurrentlyReadingRow;","import React from 'react';\nimport Row from './CurrentlyReadingRow';\nimport { innerBlock, content } from '../../styles/Sidebar';\n\nconst CurrentlyReading = ({ list, setList, finished, setFinished, toRead, setToRead }) => {\n\n    function removeItem(id) {\n        const newList = list.filter((item) => (\n            item.id === id ? false : true\n        ));\n        setList(newList);\n    }\n\n    function moveToFinished(item) {\n        let today = new Date();\n        let numberOfDaysSinceEpoch = Math.floor(today/8.64e7)\n        const newItem = { ...item, end: numberOfDaysSinceEpoch };\n        const newFinishedList = finished.concat( newItem );\n        setFinished(newFinishedList);\n        removeItem(item.id);\n    }\n\n    function moveToRead(item) {\n        const newItem = { ...item, start: null };\n        const newToReadList = toRead.concat( newItem );\n        setToRead(newToReadList);\n        removeItem(item.id);\n    }\n\n    return(\n        <div style={innerBlock}>\n            <h1>Currently Reading:</h1>\n            <div style={{...content, width:\"24rem\", right:0}}>\n            {list.map((item) => (\n                        <Row \n                            key={item.id}\n                            item={item} \n                            handleFinished={moveToFinished}\n                            handleToRead={moveToRead}\n                        />\n                ))}\n            \n            </div>\n        </div>\n    );\n}\n\nexport default CurrentlyReading;\n","import React from \"react\";\nimport styled from 'styled-components';\nimport { innerBlock, content } from '../../styles/Sidebar';\n\nconst StyledBlock = styled.h2`\n    font-weight: 800;\n    word-wrap: break-word;\n    display: inline;\n    width: 100px;\n    max-width: 100px;\n`\n\n\nconst DoneReading = ({ list }) => {\n    const arr = ['black','red', 'black', 'black']\n\n    return (\n        <div style={innerBlock}>\n            <h1>Done Reading:</h1>\n            <div style={{...content, paddingRight:\"0.5rem\", /*textAlign: \"right\",borderStyle:\"solid\"*/}}>\n                {list.map((item, index) => (\n                        <StyledBlock style={{color:arr[index%5]}} key={item.id}>\n                            {item.name.replaceAll(/\\s/g,'')}\n                        </StyledBlock>\n                    )\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default DoneReading;","import React from \"react\";\nimport ToRead from \"../components/Sidebar/ToRead\";\nimport CurrentlyReading from \"../components/Sidebar/CurrentlyReading\";\nimport DoneReading from \"../components/Sidebar/DoneReading\";\nimport { sidebarBlock } from \"../styles/Sidebar\"\n\n\nconst Sidebar = ({ toRead, current, finished, setToRead, setCurrent, setFinished }) => {\n\n    return (\n        <div style={sidebarBlock}>\n            <br/><br/>\n            <ToRead\n                list={toRead} \n                setList={setToRead}\n                current={current}\n                setCurrent={setCurrent}\n            />\n            <CurrentlyReading\n                list={current}\n                setList={setCurrent}\n                finished={finished}\n                setFinished={setFinished}\n                toRead={toRead}\n                setToRead={setToRead}\n            />\n            <DoneReading\n                list={finished}\n            />\n            <br/><br/><br/><br/>\n        </div>\n    )\n}\n\nexport default Sidebar","const Calendar = ({current, done}) => {\n    const data = orderData();\n    const today = Math.floor(new Date()/8.64e7);\n\n    function orderData() {\n        \n\n        return done;\n    }\n\n    return (\n        <div>\n        { data.map( (el) => (\n        <div>{el.name}</div>\n        )) }\n        </div>\n    )\n}\n\nexport default Calendar;","import { useEffect, useState } from 'react';\n\nexport let useStorage = (key) => {\n    const [data, setData] = useState(initialSet[key]);\n\n    const setStorage = (list) => {\n        window.localStorage.setItem([key], JSON.stringify(list));\n    }\n\n    const setList = (list) => {\n        setStorage(list);\n        setData(list);\n    }\n\n    useEffect( () => {\n        const localData = JSON.parse(window.localStorage.getItem([key]));\n        localData && setData(localData);\n    }, [key]);\n\n    return [data, setList];\n}\n\nconst toReadList = [ \n    { \n        id: 'a',\n        name: 'Moby Dick',\n        start: null,\n        end: null\n    },\n    {\n        id: 'b',\n        name: 'Pride and Prejudice',\n        start: null,\n        end: null\n    },\n    {\n        id: 'c',\n        name: 'Design as an Attitude',\n        start: null,\n        end: null\n    }\n];\n  \nconst currentList = [\n    {\n        id: 'd',\n        name: 'The Choice: Embrace the Possible',\n        start: 18658,\n        end: null\n    }\n];\n  \nconst doneReadingList = [\n    {\n        id: 'e',\n        name: 'Goodnight Moon',\n        start: 18627,\n        end: 18658\n    }\n];\n  \nconst initialSet = {\n    toRead: toReadList,\n    current: currentList,\n    done: doneReadingList\n    // toRead: [],\n    // current: [],\n    // done: []\n}","const pinkishwhite = \"#F7EEE9\";\nconst darkblue = \"#1A70A1\";\nconst lightblue = \"#caeefd\";\nconst red = \"#EE6A65\";\nconst pink = \"#f8d7d0\";\nconst peach = \"#FBAB71\";\nconst green = \"#1ec2cc\";\n\n\nconst colours = {\n    background: pinkishwhite,\n    darkblue: darkblue,\n    lightblue: lightblue,\n    red: red,\n    pink: pink,\n    peach: peach,\n    green: green,\n}\n\nexport default colours","import styled from \"styled-components\";\nimport colours from \"./colours\";\n\nconst largeText = \"64px\";\nconst bodyText = \"32px\";\nconst smallText = \"16px\";\n// const tinyText = \"8px\";\n\nconst Heading = styled.p`\n    margin: 0px;\n    font-size: ${largeText};\n    padding-top: 10px;\n    font-family: \"Open Sans\", sans-serif;\n    font-weight: 1000;\n    word-wrap: normal;\n    text-align: center;\n    color: ${colours.darkblue};\n`;\n\nconst Body = styled.span`\n    margin: 0px;\n    font-size: ${bodyText};\n    padding-bottom: 6px;\n    font-family: \"Open Sans\", sans-serif;\n    word-wrap: normal;\n    text-align: left;\n    color: ${colours.darkblue};\n    letter-spacing: 0.5px;\n    font-weight: 700;\n    line-height: 30px;\n`;\n\nconst BodyBold = styled.span`\n  font-size: ${bodyText};\n  margin-bottom: 4px;\n  font-family: \"Open Sans\", sans-serif;\n  word-wrap: normal;\n  color: ${colours.darkblue};\n  letter-spacing: 0.5px;\n  font-weight: 900;\n`;\n\nconst ButtonText = styled.p`\n    background-color: ${colours.pink};\n    font-size: ${smallText};\n    margin: 4px;\n    font-family: \"Open Sans\", sans-serif;\n    word-wrap: normal;\n    color: ${colours.darkblue};\n    letter-spacing: 0.5px;\n    font-weight: 700;\n    &:hover {\n    background-color: ${colours.peach};\n    color: ${colours.background};\n    }\n`;\n\nconst Date = styled(BodyBold)`\n    color: ${colours.red};\n`;\n\nconst Titles = styled(Body)`\n    font-size: ${smallText};\n`;\n\nconst typography = {\n    Heading: Heading,\n    Body: Body,\n    BodyBold: BodyBold,\n    ButtonText: ButtonText,\n    Date: Date,\n    Titles: Titles\n};\n\nexport default typography;","import styled from 'styled-components';\nimport typography from '../styles/typography.js'\n\nexport const Wip = styled(typography.Heading)`\n    color: gainsboro;\n    bottom: 50vh;\n    left: 10rem;\n    font-weight: 600;\n    position: fixed;\n`\n","import React from 'react'\nimport Sidebar from './containers/Sidebar'\nimport Calendar from './containers/Calendar'\nimport { useStorage } from './components/useStorage'\nimport { Wip } from './components/wip.js'\n\n\nfunction App() {\n  const [toRead, setToRead] = useStorage('toRead');\n  const [current, setCurrent] = useStorage('current');\n  const [done, setDone] = useStorage('done');\n\n\n  return (\n    <div style={appcss}>\n      <div style={sidebarcss}>\n        <Sidebar\n          toRead={toRead}\n          current={current}\n          finished={done}\n          setFinished={setDone}\n          setCurrent={setCurrent}\n          setToRead={setToRead}\n        />\n      </div>\n        <Calendar \n          current={current}\n          done={done}\n        />\n        <Wip>\n          Coming Soon!\n        </Wip>\n    </div>\n    \n  );\n}\n\nconst appcss = {\n}\n\nconst sidebarcss = {\n  position: 'fixed',\n  right: 0,\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}